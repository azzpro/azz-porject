<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.azz.order.client.mapper.ClientOrderPersonalMapper">
  <resultMap id="BaseResultMap" type="com.azz.order.client.pojo.ClientOrderPersonal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_order_code" jdbcType="VARCHAR" property="clientOrderCode" />
    <result column="client_user_id" jdbcType="BIGINT" property="clientUserId" />
    <result column="grand_total" jdbcType="DECIMAL" property="grandTotal" />
    <result column="order_status_id" jdbcType="INTEGER" property="orderStatusId" />
    <result column="payment_method" jdbcType="INTEGER" property="paymentMethod" />
    <result column="payment_status" jdbcType="INTEGER" property="paymentStatus" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="invoice_status" jdbcType="INTEGER" property="invoiceStatus" />
    <result column="order_shipping_id" jdbcType="BIGINT" property="orderShippingId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="handler" jdbcType="VARCHAR" property="handler" />
    <result column="handler_time" jdbcType="TIMESTAMP" property="handlerTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, client_order_code, client_user_id, grand_total, order_status_id, payment_method, 
    payment_status, payment_type, invoice_status, order_shipping_id, remark, status, 
    handler, handler_time, creator, create_time, modifier, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_order_personal
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_order_personal
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.azz.order.client.pojo.ClientOrderPersonal">
    insert into client_order_personal (id, client_order_code, client_user_id, 
      grand_total, order_status_id, payment_method, 
      payment_status, payment_type, invoice_status, 
      order_shipping_id, remark, status, 
      handler, handler_time, creator, 
      create_time, modifier, modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{clientOrderCode,jdbcType=VARCHAR}, #{clientUserId,jdbcType=BIGINT}, 
      #{grandTotal,jdbcType=DECIMAL}, #{orderStatusId,jdbcType=INTEGER}, #{paymentMethod,jdbcType=INTEGER}, 
      #{paymentStatus,jdbcType=INTEGER}, #{paymentType,jdbcType=INTEGER}, #{invoiceStatus,jdbcType=INTEGER}, 
      #{orderShippingId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{handler,jdbcType=VARCHAR}, #{handlerTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.azz.order.client.pojo.ClientOrderPersonal">
    insert into client_order_personal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientOrderCode != null">
        client_order_code,
      </if>
      <if test="clientUserId != null">
        client_user_id,
      </if>
      <if test="grandTotal != null">
        grand_total,
      </if>
      <if test="orderStatusId != null">
        order_status_id,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="invoiceStatus != null">
        invoice_status,
      </if>
      <if test="orderShippingId != null">
        order_shipping_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="handler != null">
        handler,
      </if>
      <if test="handlerTime != null">
        handler_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientOrderCode != null">
        #{clientOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="clientUserId != null">
        #{clientUserId,jdbcType=BIGINT},
      </if>
      <if test="grandTotal != null">
        #{grandTotal,jdbcType=DECIMAL},
      </if>
      <if test="orderStatusId != null">
        #{orderStatusId,jdbcType=INTEGER},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="invoiceStatus != null">
        #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="orderShippingId != null">
        #{orderShippingId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="handler != null">
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="handlerTime != null">
        #{handlerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.azz.order.client.pojo.ClientOrderPersonal">
    update client_order_personal
    <set>
      <if test="clientOrderCode != null">
        client_order_code = #{clientOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="clientUserId != null">
        client_user_id = #{clientUserId,jdbcType=BIGINT},
      </if>
      <if test="grandTotal != null">
        grand_total = #{grandTotal,jdbcType=DECIMAL},
      </if>
      <if test="orderStatusId != null">
        order_status_id = #{orderStatusId,jdbcType=INTEGER},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="invoiceStatus != null">
        invoice_status = #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="orderShippingId != null">
        order_shipping_id = #{orderShippingId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="handler != null">
        handler = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="handlerTime != null">
        handler_time = #{handlerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.azz.order.client.pojo.ClientOrderPersonal">
    update client_order_personal
    set client_order_code = #{clientOrderCode,jdbcType=VARCHAR},
      client_user_id = #{clientUserId,jdbcType=BIGINT},
      grand_total = #{grandTotal,jdbcType=DECIMAL},
      order_status_id = #{orderStatusId,jdbcType=INTEGER},
      payment_method = #{paymentMethod,jdbcType=INTEGER},
      payment_status = #{paymentStatus,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      invoice_status = #{invoiceStatus,jdbcType=INTEGER},
      order_shipping_id = #{orderShippingId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      handler = #{handler,jdbcType=VARCHAR},
      handler_time = #{handlerTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getClientOrderPersonalByClientOrderCode" parameterType="string" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_order_personal
    where status != 0 
    and client_order_code = #{clientOrderCode}
  </select>
  
  <resultMap id="clientOrderInfo" type="com.azz.order.client.pojo.vo.ClientOrderInfo">
  	<result column="clientOrderCode" jdbcType="VARCHAR" property="clientOrderCode" />
    <result column="grandTotal" jdbcType="DECIMAL" property="grandTotal" />
    <result column="paymentMethod" jdbcType="INTEGER" property="paymentMethod" />
    <result column="invoiceStatus" jdbcType="INTEGER" property="invoiceStatus" />
    <result column="orderStatusId" jdbcType="INTEGER" property="orderStatusId" />
    <result column="orderTime" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="receiverName" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiverPhoneNumber" property="receiverPhoneNumber" jdbcType="VARCHAR"/>
	<result column="receiverAddress" property="receiverAddress" jdbcType="VARCHAR"/>
    <result column="orderCreator" jdbcType="VARCHAR" property="orderCreator" />
    <result column="addressAlias" jdbcType="VARCHAR" property="addressAlias" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  	<collection property="orderItems" ofType="com.azz.order.client.pojo.vo.ClientOrderItemInfo">
  		<result column="merchantName" property="merchantName" jdbcType="VARCHAR"/>
        <result column="productCode" property="productCode" jdbcType="VARCHAR"/>
        <result column="modulePicUrl" property="modulePicUrl" jdbcType="VARCHAR"/>
        <result column="moduleName" property="moduleName" jdbcType="VARCHAR"/>
        <result column="deliveryTime" property="deliveryTime" jdbcType="TIMESTAMP"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
	    <result column="productPrice" jdbcType="DECIMAL" property="productPrice" />
	    <result column="productPriceSum" jdbcType="DECIMAL" property="productPriceSum" />
    </collection>
  </resultMap>
  
  <select id="getClientOrderInfoList" parameterType="com.azz.order.client.pojo.bo.SearchClientOrderParam" resultMap="clientOrderInfo">
    SELECT
		cop.id as clientOrderId,
		cop.client_order_code AS clientOrderCode,
		cop.create_time AS orderTime,
		cop.payment_method AS paymentMethod,
		cop.invoice_status as invoiceStatus,
		cu.client_user_name as orderCreator,
		cop.order_status_id as orderStatusId,
		cop.grand_total AS grandTotal,
		cop.remark as remark,
		cosa.receiver_name AS receiverName,
		cosa.address_alias AS addressAlias,
		CONCAT(cosa.province_name,cosa.city_name,cosa.area_name,cosa.detail_address) as receiverAddress,
		m.merchant_name as merchantName,
		coip.module_pic_url AS modulePicUrl,
		coip.product_code AS productCode,
		coip.module_name AS moduleName,
		coip.quantity AS quantity,
		coip.product_price as productPrice,
		coip.product_price *  coip.quantity as productPriceSum,
		coip.delivery_time as deliveryTime
	FROM
		client_order_personal cop
	LEFT JOIN order_status os ON os.status_type = 1 AND os.id = cop.order_status_id
	LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
	LEFT JOIN merchant_goods_product mgp on mgp.product_code = coip.product_code
	LEFT JOIN merchant m on m.id = mgp.merchant_id
	LEFT JOIN client_order_shipping_address cosa ON cosa.id = cop.order_shipping_id
	LEFT JOIN client_user cu ON cu.id = cosa.client_user_id
	<where>
		cop.status != 0
		<if test="orderStatus != null">
			AND cop.order_status_id = #{orderStatus}
		</if>
		<if test="searchInput != null and searchInput != ''">
			AND (
				coip.product_code LIKE CONCAT('%', #{searchInput}, '%')
			OR cop.client_order_code LIKE CONCAT('%', #{searchInput}, '%') 
			)
		</if>
		<if test="clientUserCode != null and clientUserCode != ''">
			AND cu.client_user_code = #{clientUserCode}
		</if>
	</where>
	ORDER BY cop.create_time DESC
  </select>
  
  <select id="getClientOrderDetailByClientOrderCode" parameterType="string" resultMap="clientOrderInfo">
    SELECT
		cop.id as clientOrderId,
		cop.client_order_code AS clientOrderCode,
		cop.create_time AS orderTime,
		cop.payment_method AS paymentMethod,
		cop.invoice_status as invoiceStatus,
		cu.client_user_name as orderCreator,
		cop.order_status_id as orderStatusId,
		cop.grand_total AS grandTotal,
		cop.remark as remark,
		cosa.receiver_name AS receiverName,
		cosa.receiver_phone_number as receiverPhoneNumber,
		CONCAT(cosa.province_name,cosa.city_name,cosa.area_name,cosa.detail_address) as receiverAddress,
		cosa.address_alias AS addressAlias,
		m.merchant_name as merchantName,
		coip.module_pic_url AS modulePicUrl,
		coip.product_code AS productCode,
		coip.module_name AS moduleName,
		coip.quantity AS quantity,
		coip.product_price as productPrice,
		coip.product_price *  coip.quantity as productPriceSum,
		coip.delivery_time as deliveryTime
	FROM
		client_order_personal cop
	LEFT JOIN order_status os ON os.status_type = 1 AND os.id = cop.order_status_id
	LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
	LEFT JOIN merchant_goods_product mgp on mgp.product_code = coip.product_code
	LEFT JOIN merchant m on m.id = mgp.merchant_id
	LEFT JOIN client_order_shipping_address cosa ON cosa.id = cop.order_shipping_id
	LEFT JOIN client_user cu ON cu.id = cosa.client_user_id
	where cop.status != 0
	and cop.client_order_code = #{clientOrderCode} 
  </select>
  
  <select id="getDeliveryInfoByClientOrderCode" parameterType="string" resultType="com.azz.order.client.pojo.vo.DeliveryInfo">
    SELECT
		mol.delivery_type AS deliveryType,
		mol.delivery_person AS deliveryPerson,
		mol.delivery_phone_number AS deliveryPhoneNumber,
		mol.logistisc_company_name AS logistiscCompanyName,
		ec.company_name AS expressCompany,
		mol.number AS number,
		mol.shipment_file_info AS shipmentFileInfo,
		mol.create_time AS deliveryTime,
		t.productCodes AS productCodes
	FROM
		merchant_order_logistics mol
	LEFT JOIN merchant_order mo ON mol.merchant_order_id = mo.id AND mo.order_type = 1
	LEFT JOIN client_order_personal cop ON mo.client_order_id = cop.id
	LEFT JOIN express_company ec ON ec.id = mol.express_company_id
	LEFT JOIN (
		SELECT
			GROUP_CONCAT(moi.product_code) AS productCodes,
			moi.merchant_order_id
		FROM
			merchant_order_item moi
		GROUP BY
			moi.merchant_order_id 
	) t ON t.merchant_order_id = mo.id
	where cop. STATUS != 0 
	and cop.client_order_code = #{clientOrderCode} 
	order by mol.create_time asc
  </select>
  
  <select id="getSignInfoByClientOrderCode" parameterType="string" resultType="com.azz.order.client.pojo.vo.SignInfo">
    SELECT
		csf.consignee AS consignee,
		csf.create_time AS signTime,
		csf.sign_file_info AS signFileInfo
	FROM
		client_sign_for csf
	LEFT JOIN client_order_personal cop ON csf.client_order_id = cop.id
	WHERE cop. STATUS != 0
	AND cop.client_order_code = #{clientOrderCode} 
  </select>
  
  <select id="getSixHoursNotPaidClientOrderIds" parameterType="java.lang.Integer" resultType="java.lang.Long">
    SELECT
		cop.id
	FROM
		client_order_personal cop 
	WHERE cop. STATUS != 0
	AND DATE_ADD(cop.create_time,INTERVAL 6 HOUR) &lt; NOW()  
	AND cop.order_status_id = #{orderStatusId}
  </select>
  
  <select id="getPlatformClientOrderInfoList" parameterType="com.azz.order.platform.bo.SearchPlatformClientOrderParam" resultType="com.azz.order.platform.vo.PlatformClientOrderInfo">
    SELECT
		cop.client_order_code AS clientOrderCode,
		cu.client_user_name as orderCreator,
		cop.grand_total AS grandTotal,
		cop.create_time AS orderTime,
		cop.order_status_id AS orderStatus,
		pu.user_name AS handler,
		cop.handler_time AS handlerTime
	FROM
		client_order_personal cop
	LEFT JOIN client_user cu ON cu.client_user_code = cop.creator
	LEFT JOIN platform_user pu on pu.user_code = cop.handler
	<where>
		cop.status != 0
		<if test="orderStatus != null">
			AND cop.order_status_id = #{orderStatus}
		</if>
		<if test="searchInput != null and searchInput != ''">
			AND (
				cu.client_user_name LIKE CONCAT('%', #{searchInput}, '%')
			OR cop.client_order_code LIKE CONCAT('%', #{searchInput}, '%') 
			)
		</if>
	</where>
	ORDER BY cop.create_time DESC
  </select>
  
  <select id="getAllocatedMerchantOrderInfoByClientOrderCode" parameterType="string" resultType="com.azz.order.platform.vo.AllocatedMerchantOrderInfo">
    SELECT
		cop.client_order_code AS clientOrderCode,
		cop.payment_method AS paymentMethod,
		cop.order_status_id as orderStatusId,
		cop.grand_total AS grandTotal,
		cop.handler_time as handlerTime
	FROM
		client_order_personal cop
	where cop.status != 0
	and cop.client_order_code = #{clientOrderCode} 
  </select>
  
  <resultMap id="merchantOrderInfo" type="com.azz.order.platform.vo.MerchantOrderInfo">
  	<result column="merchantCode" jdbcType="VARCHAR" property="merchantCode" />
  	<result column="merchantName" jdbcType="VARCHAR" property="merchantName" />
    <result column="eachMerchantGrandTotal" jdbcType="DECIMAL" property="eachMerchantGrandTotal" />
    <result column="merchantOrderCode" jdbcType="VARCHAR" property="merchantOrderCode" />
  	<result column="orderStatusId" jdbcType="INTEGER" property="orderStatusId" />
  	<collection property="orderItems" ofType="com.azz.order.platform.vo.MerchantOrderItemInfo">
  		<result column="deliveryDate" property="deliveryDate" jdbcType="INTEGER"/>
        <result column="productParamsName" property="productParamsName" jdbcType="VARCHAR"/>
        <result column="brandName" property="brandName" jdbcType="VARCHAR"/>
        <result column="assortmentName" property="assortmentName" jdbcType="VARCHAR"/>
        <result column="productCode" property="productCode" jdbcType="VARCHAR"/>
        <result column="modulePicUrl" property="modulePicUrl" jdbcType="VARCHAR"/>
        <result column="moduleName" property="moduleName" jdbcType="VARCHAR"/>
        <result column="deliveryTime" property="deliveryTime" jdbcType="TIMESTAMP"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
	    <result column="productPrice" jdbcType="DECIMAL" property="productPrice" />
	    <result column="productPriceSum" jdbcType="DECIMAL" property="productPriceSum" />
    </collection>
  </resultMap>
  
  <select id="getMerchantOrderListByClientOrderCode" parameterType="string" resultMap="merchantOrderInfo">
    SELECT
    	m.merchant_code as merchantCode,
		m.merchant_name AS merchantName,
		t.eachMerchantProductPriceSum AS eachMerchantGrandTotal,
		coip.delivery_date as deliveryDate,
		coip.product_params_name as productParamsName,
		coip.brand_name as brandName,
		coip.assortment_name as assortmentName,
		coip.module_pic_url AS modulePicUrl,
		coip.product_code AS productCode,
		coip.module_name AS moduleName,
		coip.quantity AS quantity,
		coip.product_price AS productPrice,
		coip.product_price * coip.quantity AS productPriceSum,
		coip.delivery_time AS deliveryTime
	FROM
		client_order_personal cop
	LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
	LEFT JOIN merchant_goods_product mgp ON mgp.product_code = coip.product_code
	LEFT JOIN merchant m ON m.id = mgp.merchant_id
	LEFT JOIN (
		SELECT
			m.id AS merchantId,
			sum(
				coip.product_price * coip.quantity
			) AS eachMerchantProductPriceSum
		FROM
			client_order_personal cop
		LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
		LEFT JOIN merchant_goods_product mgp ON mgp.product_code = coip.product_code
		LEFT JOIN merchant m ON m.id = mgp.merchant_id
		WHERE
			cop. STATUS != 0
		AND cop.client_order_code = #{clientOrderCode} 
		GROUP BY
			m.id
	) t ON t.merchantId = m.id
	WHERE
		cop. STATUS != 0
	AND cop.client_order_code = #{clientOrderCode} 
  </select>
  
  <select id="getMerchantOrderListByClientOrderCodeAndMerchantCode" resultMap="merchantOrderInfo">
    SELECT
    	m.merchant_code as merchantCode,
		m.merchant_name AS merchantName,
		t.eachMerchantProductPriceSum AS eachMerchantGrandTotal,
		coip.delivery_date as deliveryDate,
		coip.product_params_name as productParamsName,
		coip.brand_name as brandName,
		coip.assortment_name as assortmentName,
		coip.module_pic_url AS modulePicUrl,
		coip.product_code AS productCode,
		coip.module_name AS moduleName,
		coip.quantity AS quantity,
		coip.product_price AS productPrice,
		coip.product_price * coip.quantity AS productPriceSum,
		coip.delivery_time AS deliveryTime
	FROM
		client_order_personal cop
	LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
	LEFT JOIN merchant_goods_product mgp ON mgp.product_code = coip.product_code
	LEFT JOIN merchant m ON m.id = mgp.merchant_id
	LEFT JOIN (
		SELECT
			m.id AS merchantId,
			sum(
				coip.product_price * coip.quantity
			) AS eachMerchantProductPriceSum
		FROM
			client_order_personal cop
		LEFT JOIN client_order_item_personal coip ON coip.client_order_id = cop.id
		LEFT JOIN merchant_goods_product mgp ON mgp.product_code = coip.product_code
		LEFT JOIN merchant m ON m.id = mgp.merchant_id
		WHERE
			cop. STATUS != 0
		AND cop.client_order_code = #{clientOrderCode} 
		GROUP BY
			m.id
	) t ON t.merchantId = m.id
	WHERE
		cop. STATUS != 0
	AND cop.client_order_code = #{clientOrderCode} 
	AND m.merchant_code = #{merchantCode}
  </select>
  
  <select id="getGeneratedMerchantOrderListByClientOrderCode" parameterType="java.lang.Long" resultMap="merchantOrderInfo">
  	SELECT
		mo.merchant_order_code as merchantOrderCode,
		mo.order_status_id as orderStatusId,
   	 	m.merchant_code as merchantCode,
		m.merchant_name AS merchantName,
		mo.grand_total AS eachMerchantGrandTotal,
		moi.delivery_date as deliveryDate,
		moi.product_params_name as productParamsName,
		moi.brand_name as brandName,
		moi.assortment_name as assortmentName,
		moi.module_pic_url AS modulePicUrl,
		moi.product_code AS productCode,
		moi.module_name AS moduleName,
		moi.quantity AS quantity,
		moi.product_price AS productPrice,
		moi.product_price * moi.quantity AS productPriceSum,
		moi.delivery_time AS deliveryTime
	from merchant_order mo 
	left join merchant_order_item moi on moi.merchant_order_id = mo.id
	LEFT JOIN merchant m on mo.merchant_id = m.id
	where mo.`status` != 0 
	and mo.client_order_id = #{clientOrderId}
  </select>
  
  <select id="getInvoiceClient" parameterType="com.azz.order.client.pojo.bo.SearchAddInvoiceApplyParam" resultType="com.azz.order.client.pojo.vo.ClientAddInvoice">
  	SELECT
		cop.id as id,
		cop.client_order_code as clientOrderCode,
		cop.grand_total as grandTotal,
		cop.invoice_status as invoiceStatus,
		cop.order_status_id as orderStatusId,
		cop.create_time as createTime
	FROM
		client_order_personal cop
	JOIN client_user cu ON cop.client_user_id = cu.id
	WHERE
		cu.client_user_code = #{clientUserCode}
		<if test="null != clientOrderCode and '' != clientOrderCode">
			AND cop.client_order_code = #{clientOrderCode}
		</if>
	ORDER BY cop.create_time DESC
  </select>
</mapper>