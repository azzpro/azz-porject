<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.azz.platform.merchant.mapper.PlatformRecommendMapper">
  <resultMap id="BaseResultMap" type="com.azz.platform.merchant.pojo.PlatformRecommend">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="recommend_code" jdbcType="VARCHAR" property="recommendCode" />
    <result column="recommend_name" jdbcType="VARCHAR" property="recommendName" />
    <result column="special_performance_code" jdbcType="VARCHAR" property="specialPerformanceCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, recommend_code, recommend_name, special_performance_code, status, creator, create_time, 
    modifier, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from platform_recommend
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByRecommendCode" parameterType="string" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from platform_recommend
    where recommend_code = #{recommendCode}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from platform_recommend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.azz.platform.merchant.pojo.PlatformRecommend">
    insert into platform_recommend (id, recommend_code, recommend_name, 
      special_performance_code, status, creator, 
      create_time, modifier, modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{recommendCode,jdbcType=VARCHAR}, #{recommendName,jdbcType=VARCHAR}, 
      #{specialPerformanceCode,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.azz.platform.merchant.pojo.PlatformRecommend">
    insert into platform_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recommendCode != null">
        recommend_code,
      </if>
      <if test="recommendName != null">
        recommend_name,
      </if>
      <if test="specialPerformanceCode != null">
        special_performance_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="recommendCode != null">
        #{recommendCode,jdbcType=VARCHAR},
      </if>
      <if test="recommendName != null">
        #{recommendName,jdbcType=VARCHAR},
      </if>
      <if test="specialPerformanceCode != null">
        #{specialPerformanceCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.azz.platform.merchant.pojo.PlatformRecommend">
    update platform_recommend
    <set>
      <if test="recommendCode != null">
        recommend_code = #{recommendCode,jdbcType=VARCHAR},
      </if>
      <if test="recommendName != null">
        recommend_name = #{recommendName,jdbcType=VARCHAR},
      </if>
      <if test="specialPerformanceCode != null">
        special_performance_code = #{specialPerformanceCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.azz.platform.merchant.pojo.PlatformRecommend">
    update platform_recommend
    set recommend_code = #{recommendCode,jdbcType=VARCHAR},
      recommend_name = #{recommendName,jdbcType=VARCHAR},
      special_performance_code = #{specialPerformanceCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <resultMap id="recommendInfos" type="com.azz.platform.merchant.pojo.vo.RecommendInfo">
    <result column="recommend_code" jdbcType="VARCHAR" property="recommendCode" />
    <result column="recommend_name" jdbcType="VARCHAR" property="recommendName" />
    <collection property="moduleInfos" ofType="com.azz.platform.merchant.pojo.vo.ModuleInfo">
	    <result column="moduleCode" jdbcType="VARCHAR" property="moduleCode" />
	    <result column="modulePicName" jdbcType="VARCHAR" property="modulePicName" />
	    <result column="modulePicUrl" jdbcType="VARCHAR" property="modulePicUrl" />
	    <result column="moduleName" jdbcType="VARCHAR" property="moduleName" />
	    <result column="moduleStatus" jdbcType="TINYINT" property="moduleStatus" />
	    <result column="moduleMinPrice" jdbcType="DECIMAL" property="moduleMinPrice" />
    	<result column="moduleMinDeliveryDate" jdbcType="INTEGER" property="moduleMinDeliveryDate" />
    </collection>
  </resultMap>
  
  <select id="getRecommendInfos" parameterType="com.azz.platform.merchant.pojo.bo.SearchRecommendInfoParam" resultMap="recommendInfos">
  	SELECT
		pr.recommend_code AS recommendCode,
		pr.recommend_name AS recommendName,
		mgm.module_code AS moduleCode,
		mgm.module_pic_name AS modulePicName,
		mgm.module_pic_url AS modulePicUrl,
		mgm.module_name AS moduleName,
		mgm.module_status AS moduleStatus,
		t1.minPrice AS moduleMinPrice,
		t2.minDeliveryDate AS moduleMinDeliveryDate
	FROM
		platform_recommend pr
	JOIN platform_special_performance psp ON psp.special_performance_code = pr.special_performance_code
	LEFT JOIN platform_recommend_module_rel prmr ON prmr.recommend_code = pr.recommend_code
	LEFT JOIN merchant_goods_module mgm ON mgm.module_code = prmr.module_code
	LEFT JOIN (
		SELECT
			mgp.module_id,
			MIN(mgpp.price) AS minPrice
		FROM
			merchant_goods_product mgp
		JOIN merchant_goods_product_price mgpp ON mgp.id = mgpp.product_id
		JOIN merchant_goods_module mgm ON mgp.module_id = mgm.id
		JOIN platform_recommend_module_product_rel prmpr ON prmpr.product_code = mgp.product_code
		WHERE
			mgp.product_status != 0
		AND mgm.module_status != 0
		GROUP BY
			mgp.module_id
	) t1 ON t1.module_id = mgm.id
	LEFT JOIN (
		SELECT
			mgp.module_id,
			MIN(mgpp.delivery_date) AS minDeliveryDate
		FROM
			merchant_goods_product mgp
		JOIN merchant_goods_product_price mgpp ON mgp.id = mgpp.product_id
		JOIN merchant_goods_module mgm ON mgp.module_id = mgm.id
		JOIN platform_recommend_module_product_rel prmpr ON prmpr.product_code = mgp.product_code
		WHERE
			mgp.product_status != 0
		AND mgm.module_status != 0
		GROUP BY
			mgp.module_id
	) t2 ON t2.module_id = mgm.id
	<where>
			pr.`status` != 0
		AND psp.special_performance_code = #{specialPerformanceCode}
		<if test="recommendName != null and recommendName !='' ">
			and pr.recommend_name LIKE CONCAT('%', #{recommendName}, '%') 
		</if>
	</where>
	ORDER BY
		pr.create_time DESC
  </select>
  
  <select id="getRelatedModuleInfos" parameterType="com.azz.platform.merchant.pojo.bo.SearchRelatedModuleInfoParam" resultType="com.azz.platform.merchant.pojo.vo.ModuleInfo">
  	SELECT
		mgm.module_code AS moduleCode,
		mgm.module_name AS moduleName,
		mgm.module_status AS moduleStatus,
		m.merchant_name AS merchantName,
		pgc.assortment_name AS classificationName,
		CASE
	WHEN prmr.module_code IS NULL THEN
		0
	ELSE
		1
	END AS relatedStatus
	FROM
		merchant_goods_module mgm
	JOIN merchant m ON mgm.merchant_id = m.id
	JOIN platform_goods_classification pgc ON mgm.classification_id = pgc.id
	LEFT JOIN platform_recommend_module_rel prmr ON prmr.module_code = mgm.module_code
	<where>
			mgm.module_status != 0
		<if test="searchInput != null and searchInput !='' ">
			AND (
				mgm.module_code LIKE CONCAT('%', #{searchInput}, '%') 
				OR mgm.module_name LIKE CONCAT('%', #{searchInput}, '%') 
				OR m.merchant_name LIKE CONCAT('%', #{searchInput}, '%') 
			)
		</if>	
		AND mgm.module_code NOT IN (
			SELECT
				module_code
			FROM
				platform_recommend_module_rel prmr
			WHERE
				prmr.recommend_code != #{recommendCode}
		)
	</where>
	ORDER BY mgm.create_time DESC
  </select>
  
  <select id="getSpecialPerformanceRelatedModuleInfos" parameterType="com.azz.platform.merchant.pojo.bo.SearchSpecialPerformanceRelatedModuleInfoParam" resultType="com.azz.platform.merchant.pojo.vo.RelatedModuleInfo">
  	SELECT
		mgm.module_code as moduleCode,
		mgm.module_name AS moduleName,
		mgm.module_status AS moduleStatus,
		pr.recommend_code as recommendCode,
		pr.recommend_name AS recommendName,
		m.merchant_name AS merchantName,
		prmr.product_number AS productNumber,
		prmr.create_time AS relatedTime
	FROM
		merchant_goods_module mgm
	JOIN platform_recommend_module_rel prmr ON mgm.module_code = prmr.module_code
	JOIN platform_recommend pr ON pr.recommend_code = prmr.recommend_code
	JOIN merchant m ON m.id = mgm.merchant_id
	<where> 
		pr.`status` != 0
		<if test="searchInput != null and searchInput !='' ">
			AND (
				mgm.module_name LIKE CONCAT('%', #{searchInput}, '%') 
				OR pr.recommend_name LIKE CONCAT('%', #{searchInput}, '%') 
			)
		</if>	
	</where>
  	ORDER BY prmr.create_time DESC
  </select>
  
  <select id="getRecommentProductInfos" parameterType="com.azz.platform.merchant.pojo.bo.SearchRecommendProductInfoParam" resultType="com.azz.platform.merchant.pojo.vo.RecommentProductInfo">
	SELECT
		t1.product_code as productCode,
		t1.product_status as productStatus,
		t1.relatedStatus as relatedStatus,
		t1.paramValues as paramValues,
	  	t2.delivery_date as minDeliveryDate,
		t2.price as minPrice
	FROM
		(
			SELECT
				mgp.id as product_id,
				mgp.product_code,
				mgp.product_status,
				mgp.create_time,
				GROUP_CONCAT(mgpp.params_value) AS paramValues,
				CASE
			WHEN prmpr.product_code IS NULL THEN
				0
			ELSE
				1
			END AS relatedStatus
			FROM
				merchant_goods_product mgp
			JOIN merchant_goods_module mgm ON mgm.id = mgp.module_id
			JOIN merchant_goods_product_params mgpp ON mgpp.product_id = mgp.id
			LEFT JOIN platform_recommend_module_product_rel prmpr ON prmpr.product_code = mgp.product_code
			AND mgm.module_code = prmpr.module_code
			WHERE
				mgm.module_code = #{moduleCode}
			GROUP BY
				mgp.product_code
		) t1
	JOIN (
		SELECT
			t.product_id,
			t.price,
			t.delivery_date
		FROM
			(
				SELECT
					mgpp.product_id,
					mgpp.price,
					mgpp.delivery_date
				FROM
					merchant_goods_product_price mgpp
				ORDER BY
					mgpp.price ASC
			) t
		GROUP BY
			t.product_id
	) t2 ON t2.product_id = t1.product_id
	<where>
		<if test="productCode != null and productCode !='' ">
			t1.product_code like CONCAT('%', #{productCode}, '%') 
		</if>	
	</where> 
	ORDER BY t1.create_time desc
  </select>
  
</mapper>